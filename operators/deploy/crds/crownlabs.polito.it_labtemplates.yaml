
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.0
  creationTimestamp: null
  name: labtemplates.crownlabs.polito.it
spec:
  group: crownlabs.polito.it
  names:
    kind: LabTemplate
    listKind: LabTemplateList
    plural: labtemplates
    shortNames:
    - labt
    singular: labtemplate
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: LabTemplate is the Schema for the labtemplates API
        properties:
          apiVersion:
            description: APIVersion defines the versioned schema of this representation of an object.
            type: string
          kind:
            description: Kind is a string value representing the REST resource this object represents.
            type: string
          metadata:
            type: object
          spec:
            description: LabTemplateSpec defines the desired state of LabTemplate
            properties:
              courseName:
                type: string
              description:
                type: string
              labName:
                type: string
              labNum:
                anyOf:
                - type: integer
                - type: string
                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                x-kubernetes-int-or-string: true
              vm:
                description: VirtualMachineInstance is *the* VirtualMachineInstance Definition.
                properties:
                  apiVersion:
                    description: APIVersion defines the versioned schema of this representation of an object.
                    type: string
                  kind:
                    description: Kind is a string value representing the REST resource this object represents.
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: VirtualMachineInstance Spec contains the VirtualMachineInstance specification.
                    properties:
                      affinity:
                        description: If affinity is specifies, obey all the affinity rules
                        properties:
                          nodeAffinity:
                            description: Describes node affinity scheduling rules for the pod.
                            properties:
                              preferredDuringSchedulingIgnoredDuringExecution:
                                description: The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may c
                                items:
                                  description: An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op).
                                  properties:
                                    preference:
                                      description: A node selector term, associated with the corresponding weight.
                                      properties:
                                        matchExpressions:
                                          description: A list of node selector requirements by node's labels.
                                          items:
                                            description: A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: The label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                type: string
                                              values:
                                                description: An array of string values. If the operator is In or NotIn, the values array must be non-empty.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchFields:
                                          description: A list of node selector requirements by node's fields.
                                          items:
                                            description: A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: The label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                type: string
                                              values:
                                                description: An array of string values. If the operator is In or NotIn, the values array must be non-empty.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                      type: object
                                    weight:
                                      description: Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
                                      format: int32
                                      type: integer
                                  required:
                                  - preference
                                  - weight
                                  type: object
                                type: array
                              requiredDuringSchedulingIgnoredDuringExecution:
                                description: If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the nod
                                properties:
                                  nodeSelectorTerms:
                                    description: Required. A list of node selector terms. The terms are ORed.
                                    items:
                                      description: A null or empty node selector term matches no objects. The requirements of them are ANDed.
                                      properties:
                                        matchExpressions:
                                          description: A list of node selector requirements by node's labels.
                                          items:
                                            description: A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: The label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                type: string
                                              values:
                                                description: An array of string values. If the operator is In or NotIn, the values array must be non-empty.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchFields:
                                          description: A list of node selector requirements by node's fields.
                                          items:
                                            description: A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: The label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                type: string
                                              values:
                                                description: An array of string values. If the operator is In or NotIn, the values array must be non-empty.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                      type: object
                                    type: array
                                required:
                                - nodeSelectorTerms
                                type: object
                            type: object
                          podAffinity:
                            description: Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
                            properties:
                              preferredDuringSchedulingIgnoredDuringExecution:
                                description: The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may c
                                items:
                                  description: The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                                  properties:
                                    podAffinityTerm:
                                      description: Required. A pod affinity term, associated with the corresponding weight.
                                      properties:
                                        labelSelector:
                                          description: A label query over a set of resources, in this case pods.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs.
                                              type: object
                                          type: object
                                        namespaces:
                                          description: namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's name
                                          items:
                                            type: string
                                          type: array
                                        topologyKey:
                                          description: This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the spec
                                          type: string
                                      required:
                                      - topologyKey
                                      type: object
                                    weight:
                                      description: weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
                                      format: int32
                                      type: integer
                                  required:
                                  - podAffinityTerm
                                  - weight
                                  type: object
                                type: array
                              requiredDuringSchedulingIgnoredDuringExecution:
                                description: If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the nod
                                items:
                                  description: Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-l
                                  properties:
                                    labelSelector:
                                      description: A label query over a set of resources, in this case pods.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs.
                                          type: object
                                      type: object
                                    namespaces:
                                      description: namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's name
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the spec
                                      type: string
                                  required:
                                  - topologyKey
                                  type: object
                                type: array
                            type: object
                          podAntiAffinity:
                            description: Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
                            properties:
                              preferredDuringSchedulingIgnoredDuringExecution:
                                description: 'The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it '
                                items:
                                  description: The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                                  properties:
                                    podAffinityTerm:
                                      description: Required. A pod affinity term, associated with the corresponding weight.
                                      properties:
                                        labelSelector:
                                          description: A label query over a set of resources, in this case pods.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs.
                                              type: object
                                          type: object
                                        namespaces:
                                          description: namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's name
                                          items:
                                            type: string
                                          type: array
                                        topologyKey:
                                          description: This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the spec
                                          type: string
                                      required:
                                      - topologyKey
                                      type: object
                                    weight:
                                      description: weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
                                      format: int32
                                      type: integer
                                  required:
                                  - podAffinityTerm
                                  - weight
                                  type: object
                                type: array
                              requiredDuringSchedulingIgnoredDuringExecution:
                                description: If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto th
                                items:
                                  description: Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-l
                                  properties:
                                    labelSelector:
                                      description: A label query over a set of resources, in this case pods.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs.
                                          type: object
                                      type: object
                                    namespaces:
                                      description: namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's name
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the spec
                                      type: string
                                  required:
                                  - topologyKey
                                  type: object
                                type: array
                            type: object
                        type: object
                      dnsConfig:
                        description: Specifies the DNS parameters of a pod.
                        properties:
                          nameservers:
                            description: A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy.
                            items:
                              type: string
                            type: array
                          options:
                            description: A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy.
                            items:
                              description: PodDNSConfigOption defines DNS resolver options of a pod.
                              properties:
                                name:
                                  description: Required.
                                  type: string
                                value:
                                  type: string
                              type: object
                            type: array
                          searches:
                            description: A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy.
                            items:
                              type: string
                            type: array
                        type: object
                      dnsPolicy:
                        description: Set DNS policy for the pod. Defaults to "ClusterFirst".
                        type: string
                      domain:
                        description: Specification of the desired behavior of the VirtualMachineInstance on the host.
                        properties:
                          chassis:
                            description: Chassis specifies the chassis info passed to the domain.
                            properties:
                              asset:
                                type: string
                              manufacturer:
                                type: string
                              serial:
                                type: string
                              sku:
                                type: string
                              version:
                                type: string
                            type: object
                          clock:
                            description: Clock sets the clock and timers of the vmi.
                            properties:
                              timer:
                                description: Timer specifies whih timers are attached to the vmi.
                                properties:
                                  hpet:
                                    description: HPET (High Precision Event Timer) - multiple timers with periodic interrupts.
                                    properties:
                                      present:
                                        description: Enabled set to false makes sure that the machine type or a preset can't add the timer. Defaults to true.
                                        type: boolean
                                      tickPolicy:
                                        description: TickPolicy determines what happens when QEMU misses a deadline for injecting a tick to the guest.
                                        type: string
                                    type: object
                                  hyperv:
                                    description: Hyperv (Hypervclock) - lets guests read the host’s wall clock time (paravirtualized). For windows guests.
                                    properties:
                                      present:
                                        description: Enabled set to false makes sure that the machine type or a preset can't add the timer. Defaults to true.
                                        type: boolean
                                    type: object
                                  kvm:
                                    description: "KVM \t(KVM clock) - lets guests read the host’s wall clock time (paravirtualized). For linux guests."
                                    properties:
                                      present:
                                        description: Enabled set to false makes sure that the machine type or a preset can't add the timer. Defaults to true.
                                        type: boolean
                                    type: object
                                  pit:
                                    description: PIT (Programmable Interval Timer) - a timer with periodic interrupts.
                                    properties:
                                      present:
                                        description: Enabled set to false makes sure that the machine type or a preset can't add the timer. Defaults to true.
                                        type: boolean
                                      tickPolicy:
                                        description: TickPolicy determines what happens when QEMU misses a deadline for injecting a tick to the guest.
                                        type: string
                                    type: object
                                  rtc:
                                    description: RTC (Real Time Clock) - a continuously running timer with periodic interrupts.
                                    properties:
                                      present:
                                        description: Enabled set to false makes sure that the machine type or a preset can't add the timer. Defaults to true.
                                        type: boolean
                                      tickPolicy:
                                        description: TickPolicy determines what happens when QEMU misses a deadline for injecting a tick to the guest. One of "delay", "catchup".
                                        type: string
                                      track:
                                        description: Track the guest or the wall clock.
                                        type: string
                                    type: object
                                type: object
                              timezone:
                                description: Timezone sets the guest clock to the specified timezone. Zone name follows the TZ environment variable format (e.g.
                                type: string
                              utc:
                                description: UTC sets the guest clock to UTC on each boot.
                                properties:
                                  offsetSeconds:
                                    description: OffsetSeconds specifies an offset in seconds, relative to UTC.
                                    type: integer
                                type: object
                            type: object
                          cpu:
                            description: CPU allow specified the detailed CPU topology inside the vmi.
                            properties:
                              cores:
                                description: Cores specifies the number of cores inside the vmi. Must be a value greater or equal 1.
                                format: int32
                                type: integer
                              dedicatedCpuPlacement:
                                description: 'DedicatedCPUPlacement requests the scheduler to place the VirtualMachineInstance on a node with enough dedicated pCPUs and pin '
                                type: boolean
                              features:
                                description: Features specifies the CPU features list inside the VMI.
                                items:
                                  description: CPUFeature allows specifying a CPU feature.
                                  properties:
                                    name:
                                      description: Name of the CPU feature
                                      type: string
                                    policy:
                                      description: 'Policy is the CPU feature attribute which can have the following attributes: force    - The virtual CPU will claim the feature '
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                              isolateEmulatorThread:
                                description: IsolateEmulatorThread requests one more dedicated pCPU to be allocated for the VMI to place the emulator thread on it.
                                type: boolean
                              model:
                                description: Model specifies the CPU model inside the VMI. List of available models https://github.
                                type: string
                              sockets:
                                description: Sockets specifies the number of sockets inside the vmi. Must be a value greater or equal 1.
                                format: int32
                                type: integer
                              threads:
                                description: Threads specifies the number of threads inside the vmi. Must be a value greater or equal 1.
                                format: int32
                                type: integer
                            type: object
                          devices:
                            description: Devices allows adding disks, network interfaces, and others
                            properties:
                              autoattachGraphicsDevice:
                                description: Whether to attach the default graphics device or not. VNC will not be available if set to false. Defaults to true.
                                type: boolean
                              autoattachMemBalloon:
                                description: Whether to attach the Memory balloon device with default period. Period can be adjusted in virt-config. Defaults to true.
                                type: boolean
                              autoattachPodInterface:
                                description: Whether to attach a pod network interface. Defaults to true.
                                type: boolean
                              autoattachSerialConsole:
                                description: Whether to attach the default serial console or not. Serial console access will not be available if set to false.
                                type: boolean
                              blockMultiQueue:
                                description: Whether or not to enable virtio multi-queue for block devices
                                type: boolean
                              disks:
                                description: Disks describes disks, cdroms, floppy and luns which are connected to the vmi.
                                items:
                                  properties:
                                    bootOrder:
                                      description: BootOrder is an integer value > 0, used to determine ordering of boot devices. Lower values take precedence.
                                      type: integer
                                    cache:
                                      description: Cache specifies which kvm disk cache mode should be used.
                                      type: string
                                    cdrom:
                                      description: Attach a volume as a cdrom to the vmi.
                                      properties:
                                        bus:
                                          description: 'Bus indicates the type of disk device to emulate. supported values: virtio, sata, scsi.'
                                          type: string
                                        readonly:
                                          description: ReadOnly. Defaults to true.
                                          type: boolean
                                        tray:
                                          description: Tray indicates if the tray of the device is open or closed. Allowed values are "open" and "closed". Defaults to closed.
                                          type: string
                                      type: object
                                    dedicatedIOThread:
                                      description: dedicatedIOThread indicates this disk should have an exclusive IO Thread. Enabling this implies useIOThreads = true.
                                      type: boolean
                                    disk:
                                      description: Attach a volume as a disk to the vmi.
                                      properties:
                                        bus:
                                          description: 'Bus indicates the type of disk device to emulate. supported values: virtio, sata, scsi.'
                                          type: string
                                        pciAddress:
                                          description: 'If specified, the virtual disk will be placed on the guests pci address with the specifed PCI address. For example: 0000:81:01.'
                                          type: string
                                        readonly:
                                          description: ReadOnly. Defaults to false.
                                          type: boolean
                                      type: object
                                    floppy:
                                      description: Attach a volume as a floppy to the vmi.
                                      properties:
                                        readonly:
                                          description: ReadOnly. Defaults to false.
                                          type: boolean
                                        tray:
                                          description: Tray indicates if the tray of the device is open or closed. Allowed values are "open" and "closed". Defaults to closed.
                                          type: string
                                      type: object
                                    io:
                                      description: 'IO specifies which QEMU disk IO mode should be used. Supported values are: native, default, threads.'
                                      type: string
                                    lun:
                                      description: Attach a volume as a LUN to the vmi.
                                      properties:
                                        bus:
                                          description: 'Bus indicates the type of disk device to emulate. supported values: virtio, sata, scsi.'
                                          type: string
                                        readonly:
                                          description: ReadOnly. Defaults to false.
                                          type: boolean
                                      type: object
                                    name:
                                      description: Name is the device name
                                      type: string
                                    serial:
                                      description: Serial provides the ability to specify a serial number for the disk device.
                                      type: string
                                    tag:
                                      description: If specified, disk address and its tag will be provided to the guest via config drive metadata
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                              filesystems:
                                description: Filesystems describes filesystem which is connected to the vmi.
                                items:
                                  properties:
                                    name:
                                      description: Name is the device name
                                      type: string
                                    virtiofs:
                                      description: Virtiofs is supported
                                      type: object
                                  required:
                                  - name
                                  - virtiofs
                                  type: object
                                type: array
                              gpus:
                                description: Whether to attach a GPU device to the vmi.
                                items:
                                  properties:
                                    deviceName:
                                      type: string
                                    name:
                                      description: Name of the GPU device as exposed by a device plugin
                                      type: string
                                  required:
                                  - deviceName
                                  - name
                                  type: object
                                type: array
                              inputs:
                                description: Inputs describe input devices
                                items:
                                  properties:
                                    bus:
                                      description: 'Bus indicates the bus of input device to emulate. Supported values: virtio, usb.'
                                      type: string
                                    name:
                                      description: Name is the device name
                                      type: string
                                    type:
                                      description: 'Type indicated the type of input device. Supported values: tablet.'
                                      type: string
                                  required:
                                  - name
                                  - type
                                  type: object
                                type: array
                              interfaces:
                                description: Interfaces describe network interfaces which are added to the vmi.
                                items:
                                  properties:
                                    bootOrder:
                                      description: BootOrder is an integer value > 0, used to determine ordering of boot devices. Lower values take precedence.
                                      type: integer
                                    bridge:
                                      type: object
                                    dhcpOptions:
                                      description: If specified the network interface will pass additional DHCP options to the VMI
                                      properties:
                                        bootFileName:
                                          description: If specified will pass option 67 to interface's DHCP server
                                          type: string
                                        ntpServers:
                                          description: If specified will pass the configured NTP server to the VM via DHCP option 042.
                                          items:
                                            type: string
                                          type: array
                                        privateOptions:
                                          description: 'If specified will pass extra DHCP options for private use, range: 224-254'
                                          items:
                                            description: DHCPExtraOptions defines Extra DHCP options for a VM.
                                            properties:
                                              option:
                                                description: Option is an Integer value from 224-254 Required.
                                                type: integer
                                              value:
                                                description: Value is a String value for the Option provided Required.
                                                type: string
                                            required:
                                            - option
                                            - value
                                            type: object
                                          type: array
                                        tftpServerName:
                                          description: If specified will pass option 66 to interface's DHCP server
                                          type: string
                                      type: object
                                    macAddress:
                                      description: 'Interface MAC address. For example: de:ad:00:00:be:af or DE-AD-00-00-BE-AF.'
                                      type: string
                                    macvtap:
                                      type: object
                                    masquerade:
                                      type: object
                                    model:
                                      description: 'Interface model. One of: e1000, e1000e, ne2k_pci, pcnet, rtl8139, virtio. Defaults to virtio.'
                                      type: string
                                    name:
                                      description: Logical name of the interface as well as a reference to the associated networks. Must match the Name of a Network.
                                      type: string
                                    pciAddress:
                                      description: If specified, the virtual network interface will be placed on the guests pci address with the specifed PCI address.
                                      type: string
                                    ports:
                                      description: List of ports to be forwarded to the virtual machine.
                                      items:
                                        description: Port repesents a port to expose from the virtual machine. Default protocol TCP. The port field is mandatory
                                        properties:
                                          name:
                                            description: If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name.
                                            type: string
                                          port:
                                            description: Number of port to expose for the virtual machine. This must be a valid port number, 0 < x < 65536.
                                            format: int32
                                            type: integer
                                          protocol:
                                            description: Protocol for port. Must be UDP or TCP. Defaults to "TCP".
                                            type: string
                                        required:
                                        - port
                                        type: object
                                      type: array
                                    slirp:
                                      type: object
                                    sriov:
                                      type: object
                                    tag:
                                      description: If specified, the virtual network interface address and its tag will be provided to the guest via config drive
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                              networkInterfaceMultiqueue:
                                description: If specified, virtual network interfaces configured with a virtio bus will also enable the vhost multiqueue feature for network
                                type: boolean
                              rng:
                                description: Whether to have random number generator from host
                                type: object
                              watchdog:
                                description: Watchdog describes a watchdog device which can be added to the vmi.
                                properties:
                                  i6300esb:
                                    description: i6300esb watchdog device.
                                    properties:
                                      action:
                                        description: The action to take. Valid values are poweroff, reset, shutdown. Defaults to reset.
                                        type: string
                                    type: object
                                  name:
                                    description: Name of the watchdog.
                                    type: string
                                required:
                                - name
                                type: object
                            type: object
                          features:
                            description: Features like acpi, apic, hyperv, smm.
                            properties:
                              acpi:
                                description: ACPI enables/disables ACPI inside the guest. Defaults to enabled.
                                properties:
                                  enabled:
                                    description: Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
                                    type: boolean
                                type: object
                              apic:
                                description: Defaults to the machine type setting.
                                properties:
                                  enabled:
                                    description: Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
                                    type: boolean
                                  endOfInterrupt:
                                    description: EndOfInterrupt enables the end of interrupt notification in the guest. Defaults to false.
                                    type: boolean
                                type: object
                              hyperv:
                                description: Defaults to the machine type setting.
                                properties:
                                  evmcs:
                                    description: EVMCS Speeds up L2 vmexits, but disables other virtualization features. Requires vapic. Defaults to the machine type setting.
                                    properties:
                                      enabled:
                                        description: Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
                                        type: boolean
                                    type: object
                                  frequencies:
                                    description: Frequencies improves the TSC clock source handling for Hyper-V on KVM. Defaults to the machine type setting.
                                    properties:
                                      enabled:
                                        description: Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
                                        type: boolean
                                    type: object
                                  ipi:
                                    description: IPI improves performances in overcommited environments. Requires vpindex. Defaults to the machine type setting.
                                    properties:
                                      enabled:
                                        description: Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
                                        type: boolean
                                    type: object
                                  reenlightenment:
                                    description: Reenlightenment enables the notifications on TSC frequency changes. Defaults to the machine type setting.
                                    properties:
                                      enabled:
                                        description: Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
                                        type: boolean
                                    type: object
                                  relaxed:
                                    description: Relaxed instructs the guest OS to disable watchdog timeouts. Defaults to the machine type setting.
                                    properties:
                                      enabled:
                                        description: Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
                                        type: boolean
                                    type: object
                                  reset:
                                    description: Reset enables Hyperv reboot/reset for the vmi. Requires synic. Defaults to the machine type setting.
                                    properties:
                                      enabled:
                                        description: Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
                                        type: boolean
                                    type: object
                                  runtime:
                                    description: Runtime improves the time accounting to improve scheduling in the guest. Defaults to the machine type setting.
                                    properties:
                                      enabled:
                                        description: Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
                                        type: boolean
                                    type: object
                                  spinlocks:
                                    description: Spinlocks allows to configure the spinlock retry attempts.
                                    properties:
                                      enabled:
                                        description: Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
                                        type: boolean
                                      spinlocks:
                                        description: Retries indicates the number of retries. Must be a value greater or equal 4096. Defaults to 4096.
                                        format: int32
                                        type: integer
                                    type: object
                                  synic:
                                    description: SyNIC enables the Synthetic Interrupt Controller. Defaults to the machine type setting.
                                    properties:
                                      enabled:
                                        description: Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
                                        type: boolean
                                    type: object
                                  synictimer:
                                    description: SyNICTimer enables Synthetic Interrupt Controller Timers, reducing CPU load. Defaults to the machine type setting.
                                    properties:
                                      enabled:
                                        description: Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
                                        type: boolean
                                    type: object
                                  tlbflush:
                                    description: TLBFlush improves performances in overcommited environments. Requires vpindex. Defaults to the machine type setting.
                                    properties:
                                      enabled:
                                        description: Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
                                        type: boolean
                                    type: object
                                  vapic:
                                    description: VAPIC improves the paravirtualized handling of interrupts. Defaults to the machine type setting.
                                    properties:
                                      enabled:
                                        description: Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
                                        type: boolean
                                    type: object
                                  vendorid:
                                    description: VendorID allows setting the hypervisor vendor id. Defaults to the machine type setting.
                                    properties:
                                      enabled:
                                        description: Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
                                        type: boolean
                                      vendorid:
                                        description: VendorID sets the hypervisor vendor id, visible to the vmi. String up to twelve characters.
                                        type: string
                                    type: object
                                  vpindex:
                                    description: VPIndex enables the Virtual Processor Index to help windows identifying virtual processors.
                                    properties:
                                      enabled:
                                        description: Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
                                        type: boolean
                                    type: object
                                type: object
                              kvm:
                                description: Configure how KVM presence is exposed to the guest.
                                properties:
                                  hidden:
                                    description: Hide the KVM hypervisor from standard MSR based discovery. Defaults to false
                                    type: boolean
                                type: object
                              smm:
                                description: SMM enables/disables System Management Mode. TSEG not yet implemented.
                                properties:
                                  enabled:
                                    description: Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
                                    type: boolean
                                type: object
                            type: object
                          firmware:
                            description: Firmware.
                            properties:
                              bootloader:
                                description: Settings to control the bootloader that is used.
                                properties:
                                  bios:
                                    description: If set (default), BIOS will be used.
                                    properties:
                                      useSerial:
                                        description: If set, the BIOS output will be transmitted over serial
                                        type: boolean
                                    type: object
                                  efi:
                                    description: If set, EFI will be used instead of BIOS.
                                    properties:
                                      secureBoot:
                                        description: If set, SecureBoot will be enabled and the OVMF roms will be swapped for SecureBoot-enabled ones. Requires SMM to be enabled.
                                        type: boolean
                                    type: object
                                type: object
                              serial:
                                description: The system-serial-number in SMBIOS
                                type: string
                              uuid:
                                description: UUID reported by the vmi bios. Defaults to a random generated uid.
                                type: string
                            type: object
                          ioThreadsPolicy:
                            description: 'Controls whether or not disks will share IOThreads. Omitting IOThreadsPolicy disables use of IOThreads. One of: shared, auto'
                            type: string
                          machine:
                            description: Machine type.
                            properties:
                              type:
                                description: QEMU machine type is the actual chipset of the VirtualMachineInstance.
                                type: string
                            required:
                            - type
                            type: object
                          memory:
                            description: Memory allow specifying the VMI memory features.
                            properties:
                              guest:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Guest allows to specifying the amount of memory which is visible inside the Guest OS.
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              hugepages:
                                description: Hugepages allow to use hugepages for the VirtualMachineInstance instead of regular memory.
                                properties:
                                  pageSize:
                                    description: PageSize specifies the hugepage size, for x86_64 architecture valid values are 1Gi and 2Mi.
                                    type: string
                                type: object
                            type: object
                          resources:
                            description: Resources describes the Compute Resources required by this vmi.
                            properties:
                              limits:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: Limits describes the maximum amount of compute resources allowed. Valid resource keys are "memory" and "cpu".
                                type: object
                              overcommitGuestOverhead:
                                description: Don't ask the scheduler to take the guest-management overhead into account.
                                type: boolean
                              requests:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: Requests is a description of the initial vmi resources. Valid resource keys are "memory" and "cpu".
                                type: object
                            type: object
                        required:
                        - devices
                        type: object
                      evictionStrategy:
                        description: 'EvictionStrategy can be set to "LiveMigrate" if the VirtualMachineInstance should be migrated instead of shut-off in case of a '
                        type: string
                      hostname:
                        description: Specifies the hostname of the vmi If not specified, the hostname will be set to the name of the vmi, if dhcp or cloud-init is c
                        type: string
                      livenessProbe:
                        description: Periodic probe of VirtualMachineInstance liveness. VirtualmachineInstances will be stopped if the probe fails.
                        properties:
                          failureThreshold:
                            description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                            format: int32
                            type: integer
                          httpGet:
                            description: HTTPGet specifies the http request to perform.
                            properties:
                              host:
                                description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request. HTTP allows repeated headers.
                                items:
                                  description: HTTPHeader describes a custom header to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Scheme to use for connecting to the host. Defaults to HTTP.
                                type: string
                            required:
                            - port
                            type: object
                          initialDelaySeconds:
                            description: Number of seconds after the VirtualMachineInstance has started before liveness probes are initiated.
                            format: int32
                            type: integer
                          periodSeconds:
                            description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                            format: int32
                            type: integer
                          successThreshold:
                            description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1.
                            format: int32
                            type: integer
                          tcpSocket:
                            description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                            properties:
                              host:
                                description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                            required:
                            - port
                            type: object
                          timeoutSeconds:
                            description: 'Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.'
                            format: int32
                            type: integer
                        type: object
                      networks:
                        description: List of networks that can be attached to a vm's virtual interface.
                        items:
                          description: Network represents a network type and a resource that should be connected to the vm.
                          properties:
                            multus:
                              description: Represents the multus cni network.
                              properties:
                                default:
                                  description: Select the default network and add it to the multus-cni.io/default-network annotation.
                                  type: boolean
                                networkName:
                                  description: 'References to a NetworkAttachmentDefinition CRD object. Format: <networkName>, <namespace>/<networkName>.'
                                  type: string
                              required:
                              - networkName
                              type: object
                            name:
                              description: 'Network name. Must be a DNS_LABEL and unique within the vm. More info: https://kubernetes.'
                              type: string
                            pod:
                              description: Represents the stock pod network interface.
                              properties:
                                vmNetworkCIDR:
                                  description: CIDR for vm network. Default 10.0.2.0/24 if not specified.
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      nodeSelector:
                        additionalProperties:
                          type: string
                        description: NodeSelector is a selector which must be true for the vmi to fit on a node.
                        type: object
                      priorityClassName:
                        description: If specified, indicates the pod's priority. If not specified, the pod priority will be default or zero if there is no default.
                        type: string
                      readinessProbe:
                        description: Periodic probe of VirtualMachineInstance service readiness.
                        properties:
                          failureThreshold:
                            description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                            format: int32
                            type: integer
                          httpGet:
                            description: HTTPGet specifies the http request to perform.
                            properties:
                              host:
                                description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request. HTTP allows repeated headers.
                                items:
                                  description: HTTPHeader describes a custom header to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Scheme to use for connecting to the host. Defaults to HTTP.
                                type: string
                            required:
                            - port
                            type: object
                          initialDelaySeconds:
                            description: Number of seconds after the VirtualMachineInstance has started before liveness probes are initiated.
                            format: int32
                            type: integer
                          periodSeconds:
                            description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                            format: int32
                            type: integer
                          successThreshold:
                            description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1.
                            format: int32
                            type: integer
                          tcpSocket:
                            description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                            properties:
                              host:
                                description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                            required:
                            - port
                            type: object
                          timeoutSeconds:
                            description: 'Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.'
                            format: int32
                            type: integer
                        type: object
                      schedulerName:
                        description: If specified, the VMI will be dispatched by specified scheduler.
                        type: string
                      subdomain:
                        description: If specified, the fully qualified vmi hostname will be "<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>".
                        type: string
                      terminationGracePeriodSeconds:
                        description: Grace period observed after signalling a VirtualMachineInstance to stop after which the VirtualMachineInstance is force termina
                        format: int64
                        type: integer
                      tolerations:
                        description: If toleration is specified, obey all the toleration rules.
                        items:
                          description: The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operat
                          properties:
                            effect:
                              description: Effect indicates the taint effect to match. Empty means match all taint effects.
                              type: string
                            key:
                              description: Key is the taint key that the toleration applies to. Empty means match all taint keys.
                              type: string
                            operator:
                              description: Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal.
                              type: string
                            tolerationSeconds:
                              description: TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is igno
                              format: int64
                              type: integer
                            value:
                              description: Value is the taint value the toleration matches to.
                              type: string
                          type: object
                        type: array
                      volumes:
                        description: List of volumes that can be mounted by disks belonging to the vmi.
                        items:
                          description: Volume represents a named volume in a vmi.
                          properties:
                            cloudInitConfigDrive:
                              description: CloudInitConfigDrive represents a cloud-init Config Drive user-data source.
                              properties:
                                networkData:
                                  description: NetworkData contains config drive inline cloud-init networkdata.
                                  type: string
                                networkDataBase64:
                                  description: NetworkDataBase64 contains config drive cloud-init networkdata as a base64 encoded string.
                                  type: string
                                networkDataSecretRef:
                                  description: NetworkDataSecretRef references a k8s secret that contains config drive networkdata.
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.'
                                      type: string
                                  type: object
                                secretRef:
                                  description: UserDataSecretRef references a k8s secret that contains config drive userdata.
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.'
                                      type: string
                                  type: object
                                userData:
                                  description: UserData contains config drive inline cloud-init userdata.
                                  type: string
                                userDataBase64:
                                  description: UserDataBase64 contains config drive cloud-init userdata as a base64 encoded string.
                                  type: string
                              type: object
                            cloudInitNoCloud:
                              description: CloudInitNoCloud represents a cloud-init NoCloud user-data source. The NoCloud data will be added as a disk to the vmi.
                              properties:
                                networkData:
                                  description: NetworkData contains NoCloud inline cloud-init networkdata.
                                  type: string
                                networkDataBase64:
                                  description: NetworkDataBase64 contains NoCloud cloud-init networkdata as a base64 encoded string.
                                  type: string
                                networkDataSecretRef:
                                  description: NetworkDataSecretRef references a k8s secret that contains NoCloud networkdata.
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.'
                                      type: string
                                  type: object
                                secretRef:
                                  description: UserDataSecretRef references a k8s secret that contains NoCloud userdata.
                                  properties:
                                    name:
                                      description: 'Name of the referent. More info: https://kubernetes.'
                                      type: string
                                  type: object
                                userData:
                                  description: UserData contains NoCloud inline cloud-init userdata.
                                  type: string
                                userDataBase64:
                                  description: UserDataBase64 contains NoCloud cloud-init userdata as a base64 encoded string.
                                  type: string
                              type: object
                            configMap:
                              description: 'ConfigMapSource represents a reference to a ConfigMap in the same namespace. More info: https://kubernetes.'
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or it's keys must be defined
                                  type: boolean
                                volumeLabel:
                                  description: The volume label of the resulting disk inside the VMI. Different bootstrapping mechanisms require different values.
                                  type: string
                              type: object
                            containerDisk:
                              description: 'ContainerDisk references a docker image, embedding a qcow or raw disk. More info: https://kubevirt.gitbooks.'
                              properties:
                                image:
                                  description: Image is the name of the image with the embedded disk.
                                  type: string
                                imagePullPolicy:
                                  description: Image pull policy. One of Always, Never, IfNotPresent.
                                  type: string
                                imagePullSecret:
                                  description: ImagePullSecret is the name of the Docker registry secret required to pull the image. The secret must already exist.
                                  type: string
                                path:
                                  description: Path defines the path to disk file in the container
                                  type: string
                              required:
                              - image
                              type: object
                            dataVolume:
                              description: DataVolume represents the dynamic creation a PVC for this volume as well as the process of populating that PVC with a disk imag
                              properties:
                                name:
                                  description: Name represents the name of the DataVolume in the same namespace
                                  type: string
                              required:
                              - name
                              type: object
                            downwardAPI:
                              description: DownwardAPI represents downward API about the pod that should populate this volume
                              properties:
                                fields:
                                  description: Fields is a list of downward API volume file
                                  items:
                                    description: DownwardAPIVolumeFile represents information to create the file containing the pod field
                                    properties:
                                      fieldRef:
                                        description: 'Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.'
                                        properties:
                                          apiVersion:
                                            description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                            type: string
                                          fieldPath:
                                            description: Path of the field to select in the specified API version.
                                            type: string
                                        required:
                                        - fieldPath
                                        type: object
                                      mode:
                                        description: 'Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value betwe'
                                        format: int32
                                        type: integer
                                      path:
                                        description: 'Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the ''..'' path.'
                                        type: string
                                      resourceFieldRef:
                                        description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.'
                                        properties:
                                          containerName:
                                            description: 'Container name: required for volumes, optional for env vars'
                                            type: string
                                          divisor:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            description: Specifies the output format of the exposed resources, defaults to "1"
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          resource:
                                            description: 'Required: resource to select'
                                            type: string
                                        required:
                                        - resource
                                        type: object
                                    required:
                                    - path
                                    type: object
                                  type: array
                                volumeLabel:
                                  description: The volume label of the resulting disk inside the VMI. Different bootstrapping mechanisms require different values.
                                  type: string
                              type: object
                            emptyDisk:
                              description: 'EmptyDisk represents a temporary disk which shares the vmis lifecycle. More info: https://kubevirt.gitbooks.'
                              properties:
                                capacity:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Capacity of the sparse disk.
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                              required:
                              - capacity
                              type: object
                            ephemeral:
                              description: Ephemeral is a special volume source that "wraps" specified source and provides copy-on-write image on top of it.
                              properties:
                                persistentVolumeClaim:
                                  description: PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace.
                                  properties:
                                    claimName:
                                      description: ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
                                      type: string
                                    readOnly:
                                      description: Will force the ReadOnly setting in VolumeMounts. Default false.
                                      type: boolean
                                  required:
                                  - claimName
                                  type: object
                              type: object
                            hostDisk:
                              description: HostDisk represents a disk created on the cluster level
                              properties:
                                capacity:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Capacity of the sparse disk
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                path:
                                  description: The path to HostDisk image located on the cluster
                                  type: string
                                shared:
                                  description: Shared indicate whether the path is shared between nodes
                                  type: boolean
                                type:
                                  description: Contains information if disk.img exists or should be created allowed options are 'Disk' and 'DiskOrCreate'
                                  type: string
                              required:
                              - path
                              - type
                              type: object
                            name:
                              description: 'Volume''s name. Must be a DNS_LABEL and unique within the vmi. More info: https://kubernetes.'
                              type: string
                            persistentVolumeClaim:
                              description: PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace.
                              properties:
                                claimName:
                                  description: ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
                                  type: string
                                readOnly:
                                  description: Will force the ReadOnly setting in VolumeMounts. Default false.
                                  type: boolean
                              required:
                              - claimName
                              type: object
                            secret:
                              description: 'SecretVolumeSource represents a reference to a secret data in the same namespace. More info: https://kubernetes.'
                              properties:
                                optional:
                                  description: Specify whether the Secret or it's keys must be defined
                                  type: boolean
                                secretName:
                                  description: 'Name of the secret in the pod''s namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                  type: string
                                volumeLabel:
                                  description: The volume label of the resulting disk inside the VMI. Different bootstrapping mechanisms require different values.
                                  type: string
                              type: object
                            serviceAccount:
                              description: ServiceAccountVolumeSource represents a reference to a service account. There can only be one volume of this type!
                              properties:
                                serviceAccountName:
                                  description: 'Name of the service account in the pod''s namespace to use. More info: https://kubernetes.'
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                    required:
                    - domain
                    type: object
                  status:
                    description: Status is the high level overview of how the VirtualMachineInstance is doing.
                    properties:
                      activePods:
                        additionalProperties:
                          type: string
                        description: ActivePods is a mapping of pod UID to node name.
                        type: object
                      conditions:
                        description: Conditions are specific points in VirtualMachineInstance's pod runtime.
                        items:
                          properties:
                            lastProbeTime:
                              format: date-time
                              nullable: true
                              type: string
                            lastTransitionTime:
                              format: date-time
                              nullable: true
                              type: string
                            message:
                              type: string
                            reason:
                              type: string
                            status:
                              type: string
                            type:
                              type: string
                          required:
                          - status
                          - type
                          type: object
                        type: array
                      evacuationNodeName:
                        description: EvacuationNodeName is used to track the eviction process of a VMI. It stores the name of the node that we want to evacuate.
                        type: string
                      guestOSInfo:
                        description: Guest OS Information
                        properties:
                          id:
                            description: Guest OS Id
                            type: string
                          kernelRelease:
                            description: Guest OS Kernel Release
                            type: string
                          kernelVersion:
                            description: Kernel version of the Guest OS
                            type: string
                          machine:
                            description: Machine type of the Guest OS
                            type: string
                          name:
                            description: Name of the Guest OS
                            type: string
                          prettyName:
                            description: Guest OS Pretty Name
                            type: string
                          version:
                            description: Guest OS Version
                            type: string
                          versionId:
                            description: Version ID of the Guest OS
                            type: string
                        type: object
                      interfaces:
                        description: Interfaces represent the details of available network interfaces.
                        items:
                          properties:
                            interfaceName:
                              description: The interface name inside the Virtual Machine
                              type: string
                            ipAddress:
                              description: IP address of a Virtual Machine interface. It is always the first item of IPs
                              type: string
                            ipAddresses:
                              description: List of all IP addresses of a Virtual Machine interface
                              items:
                                type: string
                              type: array
                            mac:
                              description: Hardware address of a Virtual Machine interface
                              type: string
                            name:
                              description: 'Name of the interface, corresponds to name of the network assigned to the interface TODO: remove omitempty, when api breaking c'
                              type: string
                          type: object
                        type: array
                      migrationMethod:
                        description: 'Represents the method using which the vmi can be migrated: live migration or block migration'
                        type: string
                      migrationState:
                        description: Represents the status of a live migration
                        properties:
                          abortRequested:
                            description: Indicates that the migration has been requested to abort
                            type: boolean
                          abortStatus:
                            description: Indicates the final status of the live migration abortion
                            type: string
                          completed:
                            description: Indicates the migration completed
                            type: boolean
                          endTimestamp:
                            description: The time the migration action ended
                            format: date-time
                            nullable: true
                            type: string
                          failed:
                            description: Indicates that the migration failed
                            type: boolean
                          migrationUid:
                            description: The VirtualMachineInstanceMigration object associated with this migration
                            type: string
                          mode:
                            description: Lets us know if the vmi is currenly running pre or post copy migration
                            type: string
                          sourceNode:
                            description: The source node that the VMI originated on
                            type: string
                          startTimestamp:
                            description: The time the migration action began
                            format: date-time
                            nullable: true
                            type: string
                          targetDirectMigrationNodePorts:
                            additionalProperties:
                              type: integer
                            description: The list of ports opened for live migration on the destination node
                            type: object
                          targetNode:
                            description: The target node that the VMI is moving to
                            type: string
                          targetNodeAddress:
                            description: The address of the target node to use for the migration
                            type: string
                          targetNodeDomainDetected:
                            description: The Target Node has seen the Domain Start Event
                            type: boolean
                          targetPod:
                            description: The target pod that the VMI is moving to
                            type: string
                        type: object
                      nodeName:
                        description: NodeName is the name where the VirtualMachineInstance is currently running.
                        type: string
                      phase:
                        description: Phase is the status of the VirtualMachineInstance in kubernetes world.
                        type: string
                      qosClass:
                        description: The Quality of Service (QOS) classification assigned to the virtual machine instance based on resource requirements See PodQOSC
                        type: string
                      reason:
                        description: A brief CamelCase message indicating details about why the VMI is in this state. e.g. 'NodeUnresponsive'
                        type: string
                    type: object
                required:
                - spec
                type: object
              vmType:
                enum:
                - GUI
                - CLI
                type: string
            required:
            - vm
            type: object
          status:
            description: LabTemplateStatus defines the observed state of LabTemplate
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
